demo()
q()
load("~/.RData")
load("~/.RData")
help.start()
DatosEjemplo.R
DatosEjemplo
set.seed(42) #establece la semilla aleatoria
#para asegurar reproducibilidad
data <- data.frame(
Cat1 = round(runif(100, min =1, max=10)),
Cat2 = round(runif(100, min =1, max=10)))
head(data)
data$Hyp <-sqrt(data$Cat1*data$Cat2 + data$Cat2*data$Cat2)
head(data)
#particiones de entrenamiento y validacion
fold.test <- sample(nrow(data), nrow(data)/ 3)
fold.test <- sample(nrow(data), nrow(data)/ 3)
fold.test
test <-data[fold.test, ]
train <- data[-fold.test, ]
head(test)
ann <- neuralnet(Hyp ~ Cat1 + Cat2, train, hidden = 10, rep= 3)
ann
ann <- neuralnet(Hyp ~ Cat1 + Cat2, train,
hidden = 10, rep= 3)
plot(ann, rep="best")
plot(ann, rep = "best")
#para asegurar reproducibilidad
data <- data.frame(
Cat1 = round(runif(100, min =1, max=10)),
Cat2 = round(runif(100, min =1, max=10)))
head(data)
plot(ann, rep = "best")
par(mfrow=c(1,2))
gwplot(ann, selected.covariate = 'Cat1', rep = 'best')
par(mfrow=c(1,2))
gwplot(ann, selected.covariate = 'Cat1', rep = 'best')
ann <- neuralnet(Hyp ~ Cat1 + Cat2, train,
hidden = 10, rep= 3)
set.seed(42) #establece la semilla aleatoria
#para asegurar reproducibilidad
data <- data.frame(
Cat1 = round(runif(100, min =1, max=10)),
Cat2 = round(runif(100, min =1, max=10)))
head(data)
data$Hyp <-sqrt(data$Cat1*data$Cat2 + data$Cat2*data$Cat2)
head(data)
#particiones de entrenamiento y validacion
fold.test <- sample(nrow(data), nrow(data)/ 3)
fold.test
#Creacion de particion de entrenamiento
test <-data[fold.test, ]
train <- data[-fold.test, ]
head(test)
#Entrenamiento de la red neuronal
ann <- neuralnet(Hyp ~ Cat1 + Cat2, train,
hidden = 10, rep= 3)
par(mfrow=c(1,2))
gwplot(ann, selected.covariate = 'Cat1', rep = 'best')
output <- compute(ann, test[ , c("Cat1", "Cat2")], rep = 1)
output <- compute(ann, test[ , c("Cat1", "Cat2")], rep = 1)
output <- compute(ann, test[ , c("Cat1", "Cat2")], rep = 1)
output <- compute(ann, test[ , c("Cat1", "Cat2")], rep = 1)
output <- compute(ann, test[ , c("Cat1", "Cat2")], rep = 1)
demo()
par(mfrow=c(1,2))
gwplot(ann, selected.covariate = 'Cat1', rep = 'best')
data <- data.frame(
Cat1 = round(runif(100, min =1, max=10)),
Cat2 = round(runif(100, min =1, max=10)))
fold.test <- sample(nrow(data), nrow(data)/ 3)
fold.test
test <-data[fold.test, ]
train <- data[-fold.test, ]
head(test)
ann <- neuralnet(Hyp ~ Cat1 + Cat2, train,
hidden = 10, rep= 3)
par(mfrow=c(1,2))
gwplot(ann, selected.covariate = 'Cat1', rep = 'best')
par(mfrow=c(1,2))
gwplot(ann, selected.covariate = 'Cat1', rep = 'best')
par(mfrow=c(1,2))
gwplot(ann, selected.covariate = 'Cat1', rep = 'best')
par(mfrow=c(1,2))
gwplot(ann, selected.covariate = 'Cat1', rep = 'best')
par(mfrow=c(1,2))
gwplot(ann, selected.covariate = 'Cat1', rep = 'best')
par(mfrow=c(1,2))
plot(ann, selected.covariate = 'Cat1', rep = 'best')
par(mfrow=c(1,2))
gwplot(ann, selected.covariate = 'Cat1', rep = 'best')
ann <- neuralnet(Hyp ~ Cat1 + Cat2, train,
hidden = 10, rep= 3)
ann <- neuralnet(Hyp ~ Cat1 + Cat2, train,
hidden = 10, rep= 3)
ann <- neuralnet(Hyp ~ Cat1 + Cat2, train,
hidden = 10, rep= 3)
par(mfrow=c(1,2))
gwplot(ann, selected.covariate = 'Cat1', rep = 'best')
set.seed(42) #establece la semilla aleatoria
#para asegurar reproducibilidad
data <- data.frame(
Cat1 = round(runif(100, min =1, max=10)),
Cat2 = round(runif(100, min =1, max=10)))
head(data)
data$Hyp <-sqrt(data$Cat1*data$Cat2 + data$Cat2*data$Cat2)
head(data)
fold.test <- sample(nrow(data), nrow(data)/ 3)
fold.test
test <-data[fold.test, ]
train <- data[-fold.test, ]
head(test)
ann <- neuralnet(Hyp ~ Cat1 + Cat2, train,
hidden = 10, rep= 3)
